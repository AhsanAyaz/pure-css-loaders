{"version":3,"sources":["assets/logo/iomechs-logo.png","components/Header/index.tsx","components/Header/Header.tsx","constants/getLoadersData.ts","components/Modal/index.tsx","components/Modal/Modal.tsx","components/Loaders/index.tsx","components/Loaders/Loaders.tsx","components/LandingPage/index.tsx","components/LandingPage/LandingPage.tsx","App.tsx","index.tsx"],"names":["Header","className","href","rel","target","src","logo","alt","Loaders","Modal","mySelectedLoader","onOutsideClick","readableCSS","CleanCSS","format","minify","cssRules","onClick","html","styles","useState","loaders","setLoaders","modal","setModal","selectedLoader","setSelectedLoader","loaderContainerRef","useRef","useEffect","styleEle","document","createElement","innerText","LoadersData","map","loaderData","join","current","append","ref","Children","toArray","data","dangerouslySetInnerHTML","__html","LandingPage","baseName","process","APP_BASE_NAME","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"oVAAe,G,4BAAA,IAA0B,0C,gBCE1BA,ECEA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,mBACEC,KAAK,sBACLC,IAAI,sBACJC,OAAO,SACPH,UAAU,iBAJZ,SAME,qBAAKA,UAAU,OAAOI,IAAKC,EAAMC,IAAI,mBAEvC,qBAAKN,UAAU,oBAAf,6CACA,sBAAKA,UAAU,kCAAf,UACE,iFACA,cAAC,IAAD,CACEC,KAAK,8CACL,YAAU,eACV,aAAW,0CAHb,2B,yBCUKM,EAfW,C,0FCZXC,G,OCSe,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,eAC3CC,EAAc,IAAIC,IAAS,CAACC,OAAQ,aAAaC,OAAOL,EAAiBM,UAC/E,OACE,qBAAKf,UAAU,kBAAkBgB,QAASN,EAA1C,SACE,sBAAKV,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,SACGS,EAAiBQ,OAEpB,qBAAKjB,UAAU,gBAAf,SACGW,EAAYO,gBClBRX,G,OCIU,WACvB,MAA8BY,mBAAwB,IAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,oBAAkB,GAA5C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4CJ,qBAA5C,mBAAOK,EAAP,KAAuBC,EAAvB,KACMC,EAAqBC,iBAAuB,MAElDC,qBAAU,WACR,IAAMC,EAAWC,SAASC,cAAc,SACxCF,EAASG,UAAYC,EAAYC,KAAI,SAAAC,GAAU,OAAIA,EAAWpB,YAAUqB,KAAK,IACzEV,GAAsBA,EAAmBW,SAC3CX,EAAmBW,QAAQC,OAAOT,GAEpCR,EAAW,YAAIY,MACd,IAQH,OACE,sBAAKM,IAAKb,EAAoB1B,UAAU,oBAAxC,UACGsB,GAASE,GAAkB,cAAC,EAAD,CAAOf,iBAAkBe,EAAgBd,eAL/C,WACxBa,GAAUD,MAKPkB,WAASC,QACRrB,EAAQc,KAAI,SAAAC,GAAU,OACpB,sBAAKnC,UAAU,cAAcgB,QAAS,kBAZnB0B,EAY2CP,EAXpEV,EAAkB,eAAIiB,SACtBnB,GAAUD,GAFc,IAACoB,GAYnB,UACE,qBAAKC,wBAAyB,CAAEC,OAAQT,EAAWlB,QACnD,mBAAGjB,UAAU,cAAb,oCChCG6C,ECEK,WAClB,OACE,sBAAK7C,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,U,gBCJF8C,EAAWC,oJAAYC,eAAiB,GAkB/BC,MAhBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAUJ,EAAlB,SACE,qBAAK9C,UAAU,MAAf,SAGE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOmD,KAAK,IAAZ,SACE,cAAC,EAAD,aCRZC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,sBAAKtD,UAAU,UAAf,UACE,0CACA,mBACEA,UAAU,oBACVC,KAAK,yBACLE,OAAO,SACPD,IAAI,sBAJN,uCAQA,mBACEF,UAAU,oBACVC,KAAK,6CACLE,OAAO,SACPD,IAAI,sBAJN,8EAUJ4B,SAASyB,eAAe,U","file":"static/js/main.ef501faf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iomechs-logo.7eca13a5.png\";","import Header from './Header';\n\nexport default Header;\n","import './style.css';\nimport logo from '../../assets/logo/iomechs-logo.png';\nimport GitHubButton from 'react-github-btn';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header_container\">\n        <a\n          href=\"https://iomechs.com\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          className=\"logo_container\"\n        >\n          <img className=\"logo\" src={logo} alt=\"IOMechs Logo\" />\n        </a>\n        <div className=\"title header_text\">Pure CSS Loaders (configurable)</div>\n        <div className=\"repo_link_container header_text\">\n          <span> Like Pure CSS Loaders? Give our repo a &nbsp; </span>\n          <GitHubButton\n            href=\"https://github.com/iomechs/pure-css-loaders\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star iomechs/pure-css-loaders on GitHub\"\n          >\n            Star\n          </GitHubButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import LoaderCicle from '../assets/lds-circle.json';\nimport LoaderDefault from '../assets/lds-default.json';\nimport LoaderDualRing from '../assets/lds-dual-ring.json';\nimport LoaderEllipsis from '../assets/lds-ellipsis.json';\nimport LoaderFacebook from '../assets/lds-facebook.json';\nimport LoaderGrid from '../assets/lds-grid.json';\nimport LoaderHeart from '../assets/lds-heart.json';\nimport LoaderHourglass from '../assets/lds-hourglass.json';\nimport LoaderRing from '../assets/lds-ring.json';\nimport LoaderRipple from '../assets/lds-ripple.json';\nimport LoaderRoller from '../assets/lds-roller.json';\nimport LoaderSpinner from '../assets/lds-spinner.json';\nimport Loader from '../Interfaces/Loader';\n\nconst Loaders: Loader[] = [\n  LoaderCicle,\n  LoaderDefault,\n  LoaderDualRing,\n  LoaderEllipsis,\n  LoaderFacebook,\n  LoaderGrid,\n  LoaderHeart,\n  LoaderHourglass,\n  LoaderRing,\n  LoaderRipple,\n  LoaderRoller,\n  LoaderSpinner,\n]\n\nexport default Loaders;","import Modal from \"./Modal\";\n\nexport default Modal;","import {FC} from \"react\";\nimport Loader from \"../../Interfaces/Loader\";\nimport CleanCSS from 'clean-css';\n\nimport \"./style.css\";\n\ntype ModalProps = {\n  mySelectedLoader: Loader;\n  onOutsideClick: () => void\n}\n\nconst Modal: FC<ModalProps> = ({ mySelectedLoader, onOutsideClick }) => {\n  const readableCSS = new CleanCSS({format: 'beautify'}).minify(mySelectedLoader.cssRules);\n  return (\n    <div className=\"modal-container\" onClick={onOutsideClick}>\n      <div className=\"modal-body\">\n        <div className=\"html-container\">\n          {mySelectedLoader.html}\n        </div>\n        <pre className=\"css-container\">\n          {readableCSS.styles}\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import Loaders from './Loaders';\n\nexport default Loaders;","import { useEffect, useState, Children, useRef } from \"react\";\nimport LoadersData from '../../constants/getLoadersData';\nimport Loader from \"../../Interfaces/Loader\";\nimport Modal from \"../Modal\";\nimport './style.css';\n\nconst LoadersComponent = () => {\n  const [loaders, setLoaders] = useState<Loader[] | []>([]);\n  const [modal, setModal] = useState<boolean>(false);\n  const [selectedLoader, setSelectedLoader] = useState<Loader>();\n  const loaderContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const styleEle = document.createElement(\"Style\");\n    styleEle.innerText = LoadersData.map(loaderData => loaderData.cssRules).join(\"\");\n    if (loaderContainerRef && loaderContainerRef.current) {\n      loaderContainerRef.current.append(styleEle);\n    }\n    setLoaders([...LoadersData])\n  }, [])\n  const showLoaderDetails = (data:Loader) => {\n    setSelectedLoader({...data})\n    setModal(!modal)\n  }\n  const hideLoaderDetails = () => {\n    setModal(!modal);\n  }\n  return (\n    <div ref={loaderContainerRef} className=\"loaders-container\">\n      {modal && selectedLoader && <Modal mySelectedLoader={selectedLoader} onOutsideClick={hideLoaderDetails} />}\n      {Children.toArray(\n        loaders.map(loaderData => (\n          <div className=\"loader-body\" onClick={() => showLoaderDetails(loaderData)}>\n            <div dangerouslySetInnerHTML={{ __html: loaderData.html}} />\n            <p className=\"source-text\">Source &#60;&#47;&#62;</p>\n          </div>\n        ))\n      )}\n    </div>\n  )\n}\n\nexport default LoadersComponent;","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import './style.css';\nimport Header from '../Header';\nimport Loaders from '../Loaders';\n\nconst LandingPage = () => {\n  return (\n    <div className=\"landing-page\">\n      <Header />\n      <div className=\"landing-page__content\">\n        <Loaders />\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport './App.css';\nimport LandingPage from './components/LandingPage';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst baseName = process.env.APP_BASE_NAME || '';\n\nfunction App() {\n  return (\n    <Router basename={baseName}>\n      <div className=\"app\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div className=\"credits\">\n      <h5>Credits:</h5>\n      <a\n        className=\"credit-link light\"\n        href=\"https://loading.io/css\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Based on Pure CSS Loaders\n      </a>\n      <a\n        className=\"credit-link light\"\n        href=\"https://www.freepik.com/vectors/background\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Background vector created by rocketpixel - www.freepik.com\n      </a>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}