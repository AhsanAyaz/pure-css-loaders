{"version":3,"sources":["LdsAnimationDirections.ts","assets/logo/iomechs-logo.png","components/Header/index.tsx","components/Header/Header.tsx","constants/getLoadersData.ts","LoaderService.ts","components/Modal/index.tsx","components/Modal/Modal.tsx","components/Loaders/index.tsx","components/Loaders/Loaders.tsx","components/LandingPage/index.tsx","components/LandingPage/LandingPage.tsx","App.tsx","index.tsx"],"names":["LdsAnimationDirections","Header","className","href","rel","target","src","logo","alt","LoaderCircle","LCircle","Loaders","LDefault","LDualRing","LEllipsis","LFacebook","LGrid","LHeart","LHourglass","LRing","LRipple","LRoller","LSpinner","LoaderService","obj","color","size","animationDirection","cssRules","replaceAll","Modal","mySelectedLoader","onOutsideClick","readableCSS","CleanCSS","format","minify","onClick","html","styles","useState","loaders","setLoaders","modal","setModal","selectedLoader","setSelectedLoader","loaderContainerRef","useRef","loaderService","useEffect","styleEle","document","createElement","innerText","LoadersData","map","loaderData","join","current","append","showLoaderDetails","data","newLoaderInfo","configureLdsCircle","lrt","transformLoaders","loader","id","console","log","goToService","ref","Children","toArray","dangerouslySetInnerHTML","__html","LandingPage","baseName","process","APP_BASE_NAME","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae3b3397.chunk.js","sourcesContent":["export enum LdsAnimationDirections {\n  lrt,\n  rtl,\n  btt,\n  ttb,\n}\n","export default __webpack_public_path__ + \"static/media/iomechs-logo.7eca13a5.png\";","import Header from './Header';\n\nexport default Header;\n","import './style.css';\nimport logo from '../../assets/logo/iomechs-logo.png';\nimport GitHubButton from 'react-github-btn';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header_container\">\n        <a\n          href=\"https://iomechs.com\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          className=\"logo_container\"\n        >\n          <img className=\"logo\" src={logo} alt=\"IOMechs Logo\" />\n        </a>\n        <div className=\"title header_text\">Pure CSS Loaders (configurable)</div>\n        <div className=\"repo_link_container header_text\">\n          <span> Like Pure CSS Loaders? Give our repo a &nbsp; </span>\n          <GitHubButton\n            href=\"https://github.com/iomechs/pure-css-loaders\"\n            data-icon=\"octicon-star\"\n            aria-label=\"Star iomechs/pure-css-loaders on GitHub\"\n          >\n            Star\n          </GitHubButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import LCircle from '../assets/lds-circle.json';\nimport LDefault from '../assets/lds-default.json';\nimport LDualRing from '../assets/lds-dual-ring.json';\nimport LEllipsis from '../assets/lds-ellipsis.json';\nimport LFacebook from '../assets/lds-facebook.json';\nimport LGrid from '../assets/lds-grid.json';\nimport LHeart from '../assets/lds-heart.json';\nimport LHourglass from '../assets/lds-hourglass.json';\nimport LRing from '../assets/lds-ring.json';\nimport LRipple from '../assets/lds-ripple.json';\nimport LRoller from '../assets/lds-roller.json';\nimport LSpinner from '../assets/lds-spinner.json';\nimport Loader from '../Interfaces/Loader';\n\nconst Loaders: Loader[] = [\n  LCircle,\n  LDefault,\n  LDualRing,\n  LEllipsis,\n  LFacebook,\n  LGrid,\n  LHeart,\n  LHourglass,\n  LRing,\n  LRipple,\n  LRoller,\n  LSpinner,\n];\n\nexport const LoaderCircle = LCircle;\nexport const LoaderDefault = LDefault;\nexport const LoaderDualRing = LDualRing;\nexport const LoaderEllipsis = LEllipsis;\nexport const LoaderFacebook = LFacebook;\nexport const LoaderGrid = LGrid;\nexport const LoaderHeart = LHeart;\nexport const LoaderHourglass = LHourglass;\nexport const LoaderRing = LRing;\nexport const LoaderRipple = LRipple;\nexport const LoaderRoller = LRoller;\nexport const LoaderSpinner = LSpinner;\n\nexport default Loaders;\n","import Loader from './Interfaces/Loader';\n\nexport class LoaderService {\n  configureLdsCircle(\n    obj: Loader,\n    color: string,\n    size: string,\n    animationDirection: any\n  ) {\n    return {\n      ...obj,\n      cssRules: obj.cssRules\n        .replaceAll('64px', size)\n        .replaceAll('#fafafa', color),\n    };\n  }\n}\n","import Modal from \"./Modal\";\n\nexport default Modal;","import {FC} from \"react\";\nimport Loader from \"../../Interfaces/Loader\";\nimport CleanCSS from 'clean-css';\n\nimport \"./style.css\";\n\ntype ModalProps = {\n  mySelectedLoader: Loader;\n  onOutsideClick: () => void\n}\n\nconst Modal: FC<ModalProps> = ({ mySelectedLoader, onOutsideClick }) => {\n  const readableCSS = new CleanCSS({format: 'beautify'}).minify(mySelectedLoader.cssRules);\n  return (\n    <div className=\"modal-container\" onClick={onOutsideClick}>\n      <div className=\"modal-body\">\n        <div className=\"html-container\">\n          {mySelectedLoader.html}\n        </div>\n        <pre className=\"css-container\">\n          {readableCSS.styles}\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import Loaders from './Loaders';\n\nexport default Loaders;","import { useEffect, useState, Children, useRef } from 'react';\nimport LoadersData, { LoaderCircle } from '../../constants/getLoadersData';\nimport Loader from '../../Interfaces/Loader';\nimport { LdsAnimationDirections } from '../../LdsAnimationDirections';\nimport { LoaderService } from '../../LoaderService';\nimport Modal from '../Modal';\nimport './style.css';\n\nconst LoadersComponent = () => {\n  const [loaders, setLoaders] = useState<Loader[] | []>([]);\n  const [modal, setModal] = useState<boolean>(false);\n  const [selectedLoader, setSelectedLoader] = useState<Loader>();\n  const loaderContainerRef = useRef<HTMLDivElement>(null);\n  const loaderService = new LoaderService();\n\n  function goToService(selectedLoader: Loader) {\n    const newLoaderInfo: Loader = loaderService.configureLdsCircle(\n      selectedLoader,\n      'red',\n      '80px',\n      LdsAnimationDirections.lrt\n    );\n    const transformLoaders = loaders.map((loader: Loader) => {\n      if (newLoaderInfo.id === loader.id) {\n        return newLoaderInfo;\n      }\n      return loader;\n    });\n    switch (selectedLoader.id) {\n      case LoaderCircle.id:\n        console.log(transformLoaders);\n        break;\n      default:\n        console.log('default works');\n    }\n  }\n\n  useEffect(() => {\n    const styleEle = document.createElement('Style');\n    styleEle.innerText = LoadersData.map(\n      (loaderData) => loaderData.cssRules\n    ).join('');\n    if (loaderContainerRef && loaderContainerRef.current) {\n      loaderContainerRef.current.append(styleEle);\n    }\n    setLoaders([...LoadersData]);\n  }, []);\n  const showLoaderDetails = (data: Loader) => {\n    setSelectedLoader({ ...data });\n    goToService(data);\n    setModal(!modal);\n  };\n  const hideLoaderDetails = () => {\n    setModal(!modal);\n  };\n  return (\n    <div ref={loaderContainerRef} className=\"loaders-container\">\n      {modal && selectedLoader && (\n        <Modal\n          mySelectedLoader={selectedLoader}\n          onOutsideClick={hideLoaderDetails}\n        />\n      )}\n      {Children.toArray(\n        loaders.map((loaderData) => (\n          <div\n            className=\"loader-body\"\n            onClick={() => showLoaderDetails(loaderData)}\n          >\n            <div dangerouslySetInnerHTML={{ __html: loaderData.html }} />\n            <p className=\"source-text\">Source &#60;&#47;&#62;</p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default LoadersComponent;\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import './style.css';\nimport Header from '../Header';\nimport Loaders from '../Loaders';\n\nconst LandingPage = () => {\n  return (\n    <div className=\"landing-page\">\n      <Header />\n      <div className=\"landing-page__content\">\n        <Loaders />\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from 'react';\nimport './App.css';\nimport LandingPage from './components/LandingPage';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst baseName = process.env.APP_BASE_NAME || '';\n\nfunction App() {\n  return (\n    <Router basename={baseName}>\n      <div className=\"app\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div className=\"credits\">\n      <h5>Credits:</h5>\n      <a\n        className=\"credit-link light\"\n        href=\"https://loading.io/css\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Based on Pure CSS Loaders\n      </a>\n      <a\n        className=\"credit-link light\"\n        href=\"https://www.freepik.com/vectors/background\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Background vector created by rocketpixel - www.freepik.com\n      </a>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}